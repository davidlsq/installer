# Install package

- name: Package
  ansible.builtin.apt:
    name: nginx
    state: present
    policy_rc_d: 101
  register: package

- name: Package
  ansible.builtin.apt:
    name: python3-passlib
    state: present

# Create cookie

- name: Check cookie
  ansible.builtin.stat:
    path: '{{ nginx_cookie_path }}'
  register: check_cookie

- name: Create cookie
  ansible.builtin.copy:
    content: '{{ lookup("password", "/dev/null length=32 chars=ascii_letters,digits") }}'
    dest: '{{ nginx_cookie_path }}'
    owner: root
    group: root
    mode: u=rw,go=r
  no_log: true
  when: not check_cookie.stat.exists

# Set passwords

- name: Set passwords
  community.general.htpasswd:
    path: '{{ nginx_htpasswd_path }}'
    name: '{{ item[0] }}'
    password: '{{ item[1] }}'
    owner: root
    group: root
    mode: u=rw,go=r
  loop: '{{ nginx_htpasswd_users }}'
  no_log: true

# Create config

- name: Get cookie
  ansible.builtin.command: 'cat {{ nginx_cookie_path }}'
  register: cat_cookie
  check_mode: false
  changed_when: false
  no_log: true

- name: Set fact
  ansible.builtin.set_fact:
    cookie: '{{ cat_cookie.stdout }}'
    htpasswd: '{{ nginx_htpasswd_path }}'
  no_log: true

- name: Create config
  ansible.builtin.template:
    src: '{{ nginx_site_conf }}'
    dest: '/etc/nginx/sites-enabled/{{ nginx_site_name }}.conf'
    owner: root
    group: root
    mode: u=rw,go=r
  no_log: true
  register: create_config

# Create service

- name: Enable
  ansible.builtin.systemd:
    name: nginx
    enabled: true

- name: Reload
  ansible.builtin.systemd:
    name: nginx
    state: reloaded
  when: >
    package is changed or
    create_config is changed

- name: Start
  ansible.builtin.systemd:
    name: nginx
    state: started
