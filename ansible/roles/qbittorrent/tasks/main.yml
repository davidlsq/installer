# Install package

- name: Package
  ansible.builtin.apt:
    name: "qbittorrent-nox={{ qbittorrent_version }}"
    update_cache: true
    policy_rc_d: 101
  register: package

# Create var

- name: Create var directory
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    owner: '{{ qbittorrent_user }}'
    group: '{{ qbittorrent_user }}'
    mode: ug=rwx,o=rx
  with_items:
    - '{{ qbittorrent_var }}'
    - '{{ qbittorrent_var }}/qBittorrent'
    - '{{ qbittorrent_var }}/qBittorrent/config'

- name: Create config
  community.general.ini_file:
    path: '{{ qbittorrent_var }}/qBittorrent/config/qBittorrent.conf'
    owner: '{{ qbittorrent_user }}'
    group: '{{ qbittorrent_user }}'
    mode: u=rw,go=r
    section: '{{ item[0] }}'
    option: '{{ item[1] }}'
    value: '{{ item[2] }}'
    no_extra_spaces: true
  loop: '{{ qbittorrent_config }}'
  register: create_config

- name: Fix permissions
  ansible.builtin.include_role:
    name: fix_permissions
  vars:
    fix_permissions_dir: '{{ qbittorrent_var }}'
    fix_permissions_user: '{{ qbittorrent_user }}'

# Create service

- name: Create service
  ansible.builtin.template:
    src: service.j2
    dest: '/etc/systemd/system/{{ qbittorrent_name }}.service'
    owner: root
    group: root
    mode: u=rw,go=r
  register: create_service

- name: Enable
  ansible.builtin.systemd:
    name: '{{ qbittorrent_name }}'
    enabled: true

- name: Restart
  ansible.builtin.systemd:
    name: '{{ qbittorrent_name }}'
    daemon_reload: true
    state: restarted
  when: >
    package is changed or
    create_config is changed or
    create_service is changed

- name: Start
  ansible.builtin.systemd:
    name: '{{ qbittorrent_name }}'
    state: started
