# Install unrar
- name: Include role
  ansible.builtin.include_role:
    name: unrar

# Install package

- name: Package
  ansible.builtin.apt:
    name:
      - python3
      - python3-venv
      - par2
      - git
      - p7zip-full
    state: present

# Create lib

- name: Create lib directory
  ansible.builtin.file:
    path: '{{ sabnzbd_lib }}'
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: Check lib
  ansible.builtin.shell: >
    set -e -o pipefail;
    n=$(wget -q -O - "{{ sabnzbd_archive }}" |
        tar -tzf - |
        grep -F -e "SABnzbd-{{ sabnzbd_version }}/SABnzbd.py" |
        wc -l
       );
    [ "$n" == 1 ]
  args:
    executable: /bin/bash
    creates: '{{ sabnzbd_lib }}/SABnzbd.py'
  check_mode: false
  changed_when: false
  register: check_lib
  tags:
    - skip_ansible_lint

- name: Create lib
  ansible.builtin.unarchive:
    src: '{{ sabnzbd_archive }}'
    remote_src: true
    dest: '{{ sabnzbd_lib }}'
    owner: root
    group: root
    mode: u+rw,go-w+r
    creates: '{{ sabnzbd_lib }}/SABnzbd.py'
    extra_opts:
      - --transform
      - 's/^SABnzbd-{{ sabnzbd_version }}//'
  when: not ansible_check_mode
  register: create_lib

- name: Create venv
  ansible.builtin.pip:
    requirements: '{{ sabnzbd_lib }}/requirements.txt'
    virtualenv: '{{ sabnzbd_venv }}'
    virtualenv_command: python3 -m venv
  register: create_venv

# Create var

- name: Create var directory
  ansible.builtin.file:
    path: '{{ sabnzbd_var }}'
    state: directory
    owner: '{{ sabnzbd_user }}'
    group: '{{ sabnzbd_user }}'
    mode: ug=rwx,o=rx

- name: Create config
  community.general.ini_file:
    path: '{{ sabnzbd_var }}/sabnzbd.ini'
    owner: '{{ sabnzbd_user }}'
    group: '{{ sabnzbd_user }}'
    mode: ug=rw,o=r
    section: '{{ item[0] }}'
    option: '{{ item[1] }}'
    value: '{{ item[2] }}'
  loop: '{{ sabnzbd_config }}'
  register: create_config

- name: Fix permissions
  ansible.builtin.include_role:
    name: fix_permissions
  vars:
    fix_permissions_dir: '{{ sabnzbd_var }}'
    fix_permissions_user: '{{ sabnzbd_user }}'

# Create service

- name: Create service
  ansible.builtin.template:
    src: service.j2
    dest: '/etc/systemd/system/{{ sabnzbd_name }}.service'
    owner: root
    group: root
    mode: u=rw,go=r
  register: create_service

- name: Enable
  ansible.builtin.systemd:
    name: '{{ sabnzbd_name }}'
    enabled: true

- name: Restart
  ansible.builtin.systemd:
    name: '{{ sabnzbd_name }}'
    state: restarted
    daemon_reload: true
  when: >
    create_lib is changed or
    create_venv is changed or
    create_config is changed or
    create_service is changed

- name: Start
  ansible.builtin.systemd:
    name: '{{ sabnzbd_name }}'
    state: started
