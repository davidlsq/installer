---

__samba_shares: |
  {% set __samba_shares = [] %}
  {% for samba_share in samba_shares %}
  {% set __samba_share = samba_share %}
  {% set _ = __samba_share.update({
    "path": samba_share.path | default(__samba_data + "/" + (samba_share.name | lower)),
    "timemachine": samba_share.timemachine | default(false),
    "users": samba_share.users | default([]),
  }) %}
  {% set _ = __samba_shares.append(__samba_share) %}
  {% endfor %}
  {{ __samba_shares }}

__samba_src: '{{ service_opt }}/src-{{ samba_version }}'
__samba_bin: '{{ service_opt }}/bin-{{ samba_version }}'
__samba_etc: '{{ service_opt }}/etc'
__samba_run: '{{ service_opt }}/run'
__samba_var: '{{ service_opt }}/var'
__samba_data: '{{ service_opt }}/data'
__samba_log: '{{ service_opt }}/log'
__samba_share_paths: '{{ __samba_shares | map(attribute="path") }}'

service_config:
  - Type: notify
  - ExecStart: |
      {{ __samba_bin }}/sbin/smbd \
        --foreground --no-process-group \
        --debuglevel 3
  - ExecReload: /bin/kill -HUP $MAINPID
  - PIDFile: '{{ __samba_run }}/smbd.pid'
  - LimitCORE: infinity
  - AmbientCapabilities: CAP_NET_BIND_SERVICE
  - PrivateUsers: false
  - UMask: '0022'
service_readonly:
  - '{{ __samba_bin }}'
  - '{{ __samba_etc }}'
  - '{{ __samba_data }}'
service_readwrite:
  - '{{ __samba_run }}'
  - '{{ __samba_var }}'
  - '{{ __samba_log }}'
  - '{{ __samba_share_paths }}'
