# Install package

- name: Package
  apt:
    name:
    - mono-devel
    - curl
    - sqlite3
    - python3-lxml
    - mediainfo
    state: latest

# Create lib

- name: Create lib directory
  file:
    path: '{{ sonarr_lib }}'
    state: directory
    owner: root
    group: root
    mode: u=rwx,go=rx

- name: Create lib
  unarchive:
    src: '{{ sonarr_archive }}'
    remote_src: yes
    dest: '{{ sonarr_lib }}'
    owner: root
    group: root
    mode: u+rw,go-w+r
    creates: '{{ sonarr_lib }}/Sonarr.exe'
    extra_opts:
    - --transform
    - 's/^Sonarr//'
  register: create_lib

# Create var

- name: Create var directory
  file:
    path: '{{ sonarr_var }}'
    state: directory
    owner: '{{ sonarr_user }}'
    group: '{{ sonarr_user }}'
    mode: ug=rwx,o=rx

- name: Check config
  stat:
    path: '{{ sonarr_var }}/config.xml'
  register: check_config

- name: Init config
  copy:
    content: <Config></Config>
    dest: '{{ sonarr_var }}/config.xml'
    owner: '{{ sonarr_user }}'
    group: '{{ sonarr_user }}'
    mode: u=rw,go=r
  when: not check_config.stat.exists

- name: Create config
  xml:
    path: '{{ sonarr_var }}/config.xml'
    xpath: '/Config/{{ item[0] }}'
    value: '{{ item[1] | string }}'
  loop: '{{ sonarr_config }}'
  register: create_config

- name: Fix permissions
  shell: >
    find {{ sonarr_var }} \
      ! -user root \
      ! -user {{ sonarr_user }} \
      -print \
      -exec chown {{ sonarr_user }}. {} \; \
      | wc -l
  register: fix_permissions
  changed_when: fix_permissions.stdout != '0'

# Create service

- name: Create service
  template:
    src: service.j2
    dest: '/etc/systemd/system/{{ sonarr_name }}.service'
    owner: root
    group: root
    mode: u=rw,go=r
  register: create_service

- name: Enable
  systemd: 
    name: '{{ sonarr_name }}'
    enabled: true

- name: Restart
  systemd:
    name: '{{ sonarr_name }}'
    daemon_reload: true
    state: restarted
  when: >
    create_lib is changed or
    create_config is changed or
    create_service is changed

- name: Start 
  systemd: 
    name: '{{ sonarr_name }}'
    state: started
